<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xy.alcs.dao.StudentMapper">
    <resultMap id="BaseResultMap" type="xy.alcs.domain.Student">
        <id column="sid" property="sid" jdbcType="BIGINT"/>
        <id column="stu_id" property="stuId" jdbcType="VARCHAR"/>
        <result column="stu_name" property="stuName" jdbcType="VARCHAR"/>
        <result column="stu_gender" property="stuGender" jdbcType="INTEGER"/>
        <result column="stu_col_id" property="stuColId" jdbcType="INTEGER"/>
        <result column="stu_maj_id" property="stuMajId" jdbcType="INTEGER"/>
        <result column="stu_cla_id" property="stuClaId" jdbcType="INTEGER"/>
        <result column="stu_password" property="stuPassword" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="MyContestDetailDto" type="xy.alcs.dto.MyContestDetailDto">
        <result column="cid" property="cid" jdbcType="BIGINT"></result>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="summary" property="summary" jdbcType="VARCHAR"/>
        <result column="end_date" property="endDate" jdbcType="DATE"/>
        <result column="start_date" property="startDate" jdbcType="DATE"/>
        <result column="enroll_start_date" property="enrollStartDate" jdbcType="DATE"/>
        <result column="enroll_end_date" property="enrollEndDate" jdbcType="DATE"/>
        <result column="works_end_date" property="worksEndDate" jdbcType="DATE"/>
        <result column="score_start_date" property="scoreStartDate" jdbcType="DATE"/>
        <result column="score_end_date" property="scoreEndDate" jdbcType="DATE"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="StudentDtoResultMap" type="xy.alcs.dto.StudentDto">
        <result column="sid" property="sid" jdbcType="BIGINT"/>
        <result column="stu_id" property="stuId" jdbcType="VARCHAR"/>
        <result column="stu_name" property="stuName" jdbcType="VARCHAR"/>
        <result column="col_id" property="colId" jdbcType="INTEGER"/>
        <result column="col_name" property="colName" jdbcType="VARCHAR"/>
        <result column="maj_id" property="majId" jdbcType="INTEGER"/>
        <result column="maj_name" property="majName" jdbcType="VARCHAR"/>
        <result column="cla_id" property="claId" jdbcType="INTEGER"/>
        <result column="cla_name" property="claName" jdbcType="VARCHAR"/>
        <result column="stu_gender" property="stuGender" jdbcType="INTEGER"/>
        <result column="stu_password" property="stuPassword" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    sid, stu_id, stu_name, stu_gender, stu_col_id, stu_maj_id, stu_cla_id, stu_password
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="xy.alcs.domain.StudentExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="xy.alcs.domain.StudentKey">
        select
        <include refid="Base_Column_List"/>
        from student
        where sid = #{sid,jdbcType=BIGINT}
        and stu_id = #{stuId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="xy.alcs.domain.StudentKey">
    delete from student
    where sid = #{sid,jdbcType=BIGINT}
      and stu_id = #{stuId,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="xy.alcs.domain.StudentExample">
        delete from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="xy.alcs.domain.Student">
    insert into student (sid, stu_id, stu_name, 
      stu_gender, stu_col_id, stu_maj_id, 
      stu_cla_id, stu_password)
    values (#{sid,jdbcType=BIGINT}, #{stuId,jdbcType=VARCHAR}, #{stuName,jdbcType=VARCHAR}, 
      #{stuGender,jdbcType=INTEGER}, #{stuColId,jdbcType=INTEGER}, #{stuMajId,jdbcType=INTEGER}, 
      #{stuClaId,jdbcType=INTEGER}, #{stuPassword,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="xy.alcs.domain.Student">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                sid,
            </if>
            <if test="stuId != null">
                stu_id,
            </if>
            <if test="stuName != null">
                stu_name,
            </if>
            <if test="stuGender != null">
                stu_gender,
            </if>
            <if test="stuColId != null">
                stu_col_id,
            </if>
            <if test="stuMajId != null">
                stu_maj_id,
            </if>
            <if test="stuClaId != null">
                stu_cla_id,
            </if>
            <if test="stuPassword != null">
                stu_password,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                #{sid,jdbcType=BIGINT},
            </if>
            <if test="stuId != null">
                #{stuId,jdbcType=VARCHAR},
            </if>
            <if test="stuName != null">
                #{stuName,jdbcType=VARCHAR},
            </if>
            <if test="stuGender != null">
                #{stuGender,jdbcType=INTEGER},
            </if>
            <if test="stuColId != null">
                #{stuColId,jdbcType=INTEGER},
            </if>
            <if test="stuMajId != null">
                #{stuMajId,jdbcType=INTEGER},
            </if>
            <if test="stuClaId != null">
                #{stuClaId,jdbcType=INTEGER},
            </if>
            <if test="stuPassword != null">
                #{stuPassword,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="xy.alcs.domain.StudentExample" resultType="java.lang.Integer">
        select count(*) from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update student
        <set>
            <if test="record.sid != null">
                sid = #{record.sid,jdbcType=BIGINT},
            </if>
            <if test="record.stuId != null">
                stu_id = #{record.stuId,jdbcType=VARCHAR},
            </if>
            <if test="record.stuName != null">
                stu_name = #{record.stuName,jdbcType=VARCHAR},
            </if>
            <if test="record.stuGender != null">
                stu_gender = #{record.stuGender,jdbcType=INTEGER},
            </if>
            <if test="record.stuColId != null">
                stu_col_id = #{record.stuColId,jdbcType=INTEGER},
            </if>
            <if test="record.stuMajId != null">
                stu_maj_id = #{record.stuMajId,jdbcType=INTEGER},
            </if>
            <if test="record.stuClaId != null">
                stu_cla_id = #{record.stuClaId,jdbcType=INTEGER},
            </if>
            <if test="record.stuPassword != null">
                stu_password = #{record.stuPassword,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update student
        set sid = #{record.sid,jdbcType=BIGINT},
        stu_id = #{record.stuId,jdbcType=VARCHAR},
        stu_name = #{record.stuName,jdbcType=VARCHAR},
        stu_gender = #{record.stuGender,jdbcType=INTEGER},
        stu_col_id = #{record.stuColId,jdbcType=INTEGER},
        stu_maj_id = #{record.stuMajId,jdbcType=INTEGER},
        stu_cla_id = #{record.stuClaId,jdbcType=INTEGER},
        stu_password = #{record.stuPassword,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="xy.alcs.domain.Student">
        update student
        <set>
            <if test="stuName != null">
                stu_name = #{stuName,jdbcType=VARCHAR},
            </if>
            <if test="stuGender != null">
                stu_gender = #{stuGender,jdbcType=INTEGER},
            </if>
            <if test="stuColId != null">
                stu_col_id = #{stuColId,jdbcType=INTEGER},
            </if>
            <if test="stuMajId != null">
                stu_maj_id = #{stuMajId,jdbcType=INTEGER},
            </if>
            <if test="stuClaId != null">
                stu_cla_id = #{stuClaId,jdbcType=INTEGER},
            </if>
            <if test="stuPassword != null">
                stu_password = #{stuPassword,jdbcType=VARCHAR},
            </if>
        </set>
        where sid = #{sid,jdbcType=BIGINT}
        and stu_id = #{stuId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="xy.alcs.domain.Student">
        update student
        set stu_name = #{stuName,jdbcType=VARCHAR},
          stu_gender = #{stuGender,jdbcType=INTEGER},
          stu_col_id = #{stuColId,jdbcType=INTEGER},
          stu_maj_id = #{stuMajId,jdbcType=INTEGER},
          stu_cla_id = #{stuClaId,jdbcType=INTEGER},
          stu_password = #{stuPassword,jdbcType=VARCHAR}
        where sid = #{sid,jdbcType=BIGINT}
          and stu_id = #{stuId,jdbcType=VARCHAR}
  </update>

    <select id="selectStuInfo" parameterType="java.lang.String" resultMap="StudentDtoResultMap">
         SELECT * FROM
            student
            INNER JOIN clas ON student.stu_cla_id = clas.cla_id
            INNER JOIN major ON student.stu_maj_id = major.maj_id
            INNER JOIN college ON student.stu_col_id = college.col_id
            WHERE student.stu_id = #{stuId}
    </select>
    <sql id="limit_select">
        LIMIT #{offset},#{limit};
    </sql>
    <select id="selectStuList" parameterType="java.util.Map" resultMap="StudentDtoResultMap">
        SELECT * FROM
        student
        INNER JOIN clas ON student.stu_cla_id = clas.cla_id
        INNER JOIN major ON student.stu_maj_id = major.maj_id
        INNER JOIN college ON student.stu_col_id = college.col_id
        WHERE 1=1
        <if test="stuId != null">
            and  student.stu_id = #{stuId}
        </if>
        <if test="majorName != null">
            and major.maj_name LIKE #{majorName}
        </if>
        <if test="clasName != null">
            and clas.cla_name LIKE #{clasName}
        </if>
        <if test="colName != null">
            and college.col_name LIKE #{colName}
        </if>
        <if test="majId != null">
            AND major.maj_id = #{majId}
        </if>
        <if test="claId != null">
            AND clas.cla_id = #{claId}
        </if>
        <if test="colId != null">
            AND college.col_id = #{colId}
        </if>
        <if test="offset != null and limit!= null">
            <include refid="limit_select"></include>
        </if>
    </select>
    <select id="countStuList" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(*) FROM
        student
        INNER JOIN clas ON student.stu_cla_id = clas.cla_id
        INNER JOIN major ON student.stu_maj_id = major.maj_id
        INNER JOIN college ON student.stu_col_id = college.col_id
        WHERE 1=1
        <if test="stuId != null">
            and  student.stu_id = #{stuId}
        </if>
        <if test="majorName != null">
            and major.maj_name LIKE #{majorName}
        </if>
        <if test="clasName != null">
            and clas.cla_name LIKE #{clasName}
        </if>
        <if test="colName != null">
            and college.col_name LIKE #{colName}
        </if>
        <if test="majId != null">
            AND major.maj_id = #{majId}
        </if>
        <if test="claId != null">
            AND clas.cla_id = #{claId}
        </if>
        <if test="colId != null">
            AND college.col_id = #{colId}
        </if>
    </select>
</mapper>