<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xy.alcs.dao.StudentCompetitionMapper" >
  <resultMap id="BaseResultMap" type="xy.alcs.domain.StudentCompetition" >
    <id column="sc_id" property="scId" jdbcType="BIGINT" />
    <result column="student_id" property="studentId" jdbcType="VARCHAR" />
    <result column="student_n" property="studentN" jdbcType="INTEGER" />
    <result column="contest_id" property="contestId" jdbcType="BIGINT" />
    <result column="team_id" property="teamId" jdbcType="VARCHAR" />
    <result column="TIMESTAMP" property="timestamp" jdbcType="TIMESTAMP" />
    <result column="workcommit" property="workcommit" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="MyContestDetailDto" type="xy.alcs.dto.MyContestDetailDto">
    <result column="cid" property="cid" jdbcType="BIGINT"></result>
    <result column="title" property="title" jdbcType="VARCHAR"/>
    <result column="summary" property="summary" jdbcType="VARCHAR"/>
    <result column="end_date" property="endDate" jdbcType="DATE"/>
    <result column="start_date" property="startDate" jdbcType="DATE"/>
    <result column="enroll_start_date" property="enrollStartDate" jdbcType="DATE"/>
    <result column="enroll_end_date" property="enrollEndDate" jdbcType="DATE"/>
    <result column="works_end_date" property="worksEndDate" jdbcType="DATE"/>
    <result column="score_start_date" property="scoreStartDate" jdbcType="DATE"/>
    <result column="score_end_date" property="scoreEndDate" jdbcType="DATE"/>
    <result column="status" property="status" jdbcType="INTEGER"/>
    <result column="team_id" property="teamId" jdbcType="VARCHAR" />
    <result column="workcommit" property="workcommit" javaType="INTEGER"></result>
    <result column="score" jdbcType="REAL" property="score" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sc_id, student_id, student_n, contest_id, team_id, TIMESTAMP, workcommit
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="xy.alcs.domain.StudentCompetitionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_competition
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from student_competition
    where sc_id = #{scId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from student_competition
    where sc_id = #{scId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="xy.alcs.domain.StudentCompetitionExample" >
    delete from student_competition
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xy.alcs.domain.StudentCompetition" >
    insert into student_competition (sc_id, student_id, student_n, 
      contest_id, team_id, TIMESTAMP, 
      workcommit)
    values (#{scId,jdbcType=BIGINT}, #{studentId,jdbcType=VARCHAR}, #{studentN,jdbcType=INTEGER}, 
      #{contestId,jdbcType=BIGINT}, #{teamId,jdbcType=VARCHAR}, #{timestamp,jdbcType=TIMESTAMP}, 
      #{workcommit,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="xy.alcs.domain.StudentCompetition" >
    insert into student_competition
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="scId != null" >
        sc_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="studentN != null" >
        student_n,
      </if>
      <if test="contestId != null" >
        contest_id,
      </if>
      <if test="teamId != null" >
        team_id,
      </if>
      <if test="timestamp != null" >
        TIMESTAMP,
      </if>
      <if test="workcommit != null" >
        workcommit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="scId != null" >
        #{scId,jdbcType=BIGINT},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="studentN != null" >
        #{studentN,jdbcType=INTEGER},
      </if>
      <if test="contestId != null" >
        #{contestId,jdbcType=BIGINT},
      </if>
      <if test="teamId != null" >
        #{teamId,jdbcType=VARCHAR},
      </if>
      <if test="timestamp != null" >
        #{timestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="workcommit != null" >
        #{workcommit,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xy.alcs.domain.StudentCompetitionExample" resultType="java.lang.Integer" >
    select count(*) from student_competition
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student_competition
    <set >
      <if test="record.scId != null" >
        sc_id = #{record.scId,jdbcType=BIGINT},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.studentN != null" >
        student_n = #{record.studentN,jdbcType=INTEGER},
      </if>
      <if test="record.contestId != null" >
        contest_id = #{record.contestId,jdbcType=BIGINT},
      </if>
      <if test="record.teamId != null" >
        team_id = #{record.teamId,jdbcType=VARCHAR},
      </if>
      <if test="record.timestamp != null" >
        TIMESTAMP = #{record.timestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.workcommit != null" >
        workcommit = #{record.workcommit,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student_competition
    set sc_id = #{record.scId,jdbcType=BIGINT},
      student_id = #{record.studentId,jdbcType=VARCHAR},
      student_n = #{record.studentN,jdbcType=INTEGER},
      contest_id = #{record.contestId,jdbcType=BIGINT},
      team_id = #{record.teamId,jdbcType=VARCHAR},
      TIMESTAMP = #{record.timestamp,jdbcType=TIMESTAMP},
      workcommit = #{record.workcommit,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xy.alcs.domain.StudentCompetition" >
    update student_competition
    <set >
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="studentN != null" >
        student_n = #{studentN,jdbcType=INTEGER},
      </if>
      <if test="contestId != null" >
        contest_id = #{contestId,jdbcType=BIGINT},
      </if>
      <if test="teamId != null" >
        team_id = #{teamId,jdbcType=VARCHAR},
      </if>
      <if test="timestamp != null" >
        TIMESTAMP = #{timestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="workcommit != null" >
        workcommit = #{workcommit,jdbcType=INTEGER},
      </if>
    </set>
    where sc_id = #{scId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="xy.alcs.domain.StudentCompetition" >
    update student_competition
    set student_id = #{studentId,jdbcType=VARCHAR},
      student_n = #{studentN,jdbcType=INTEGER},
      contest_id = #{contestId,jdbcType=BIGINT},
      team_id = #{teamId,jdbcType=VARCHAR},
      TIMESTAMP = #{timestamp,jdbcType=TIMESTAMP},
      workcommit = #{workcommit,jdbcType=INTEGER}
    where sc_id = #{scId,jdbcType=BIGINT}
  </update>

  <!--查询某比赛的详细信息-->
  <select id="selectContestBySidAndCid" resultMap="MyContestDetailDto">
    SELECT * FROM student_competition
      LEFT JOIN works ON works.team_id = student_competition.team_id
      LEFT JOIN contest ON student_competition.contest_id = contest.cid
    WHERE student_competition.student_id = #{sId} AND contest.cid = #{cId}
  </select>
</mapper>